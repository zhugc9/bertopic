# ================================================================
# 🎓 BERTopic主题分析系统 - 博士生专用配置面板
# ================================================================
# 📖 完整使用指南：这是您唯一需要修改的文件
# 🚀 快速开始：修改下面的设置，然后双击 run_analysis.bat
# ================================================================

# ================================================================
# 🗂️ 第一步：告诉系统您的数据在哪里
# ================================================================
data_files:
  # 📁 数据文件路径（支持Excel格式）
  # 💡 提示：可以放在项目的data文件夹中，也可以用绝对路径
  
  traditional_media: "data/传统媒体数据.xlsx"    # 传统媒体数据文件
  social_media: "data/社交媒体数据.xlsx"         # 社交媒体数据文件
  
  # 🔹 如果只有一个数据文件，请将另一个设为 null
  # 示例：social_media: null
  
  # 📋 数据文件要求：
  # - 必须有文本列（默认列名：Unit_Text）
  # - 建议有日期列（默认列名：日期）  
  # - 建议有来源列（默认列名：Source）

# ================================================================
# 🎯 第二步：选择分析模式（核心选择）
# ================================================================
analysis_mode: 'analyze'  # 选项：'tune' 或 'analyze'

# 📚 模式详解：
# 
# 🔍 'tune' - 智能调参模式（推荐新手）
#   ✨ 机器自动尝试100+种参数组合
#   📊 用主题一致性指标筛选出Top5最佳参数
#   ⏰ 耗时：30-60分钟（取决于数据量）
#   💡 适用：不知道用什么参数时，让机器帮您选择
#
# 📈 'analyze' - 正式分析模式（专家使用）
#   🎯 使用指定参数进行完整分析
#   📊 生成详细报告、图表、数据表
#   ⏰ 耗时：10-30分钟
#   💡 适用：已知参数或要对比不同参数效果时

# ================================================================
# ⚙️ 第三步：主题分析核心设置
# ================================================================
topic_settings:
  # 🎯 最重要的参数（直接影响主题质量）
  expected_topics: "auto"        # 期望主题数：填数字(如20)或"auto"让系统决定
  min_documents_per_topic: 15    # 每个主题最少文档数：建议10-20
  
  # 🌍 语言设置
  text_language: "chinese"       # 主要语言：chinese/english/multilingual
  
  # 📝 高级设置（通常无需修改）
  advanced:
    similarity_threshold: 0.7    # 文档相似度阈值：0-1，越高主题越精确
    keyword_extraction: "enhanced"  # 关键词质量：basic/standard/enhanced

# ================================================================
# 🔧 第四步：智能调参设置（仅tune模式生效）
# ================================================================
auto_tuning:
  trials: 100                    # 尝试次数：50-200，越多效果越好但耗时越长
  save_best: 5                   # 保存最佳参数个数：建议3-10个
  
  # 🎛️ 搜索范围（高级用户可调整）
  search_space:
    topic_granularity: [5, 50]   # 主题粒度范围：[细致, 宏观]
    clustering_sensitivity: [2, 15]  # 聚类敏感度范围：[宽松, 严格]

# ================================================================
# 📊 第五步：候选参数选择（analyze模式使用）
# ================================================================
parameter_selection:
  # 🏆 从调参结果中选择参数
  use_candidate: 1               # 使用第几个候选参数（1-5）
  
  # 🔧 或者手动指定参数
  manual_override:
    enable: false                # 是否使用手动参数（true/false）
    expected_topics: 20
    min_documents_per_topic: 15
    similarity_threshold: 0.7
  
  # 💡 调参结果会自动填充在下面（运行tune模式后生成）
  # candidates:
  #   candidate_1:
  #     score: 0.567
  #     description: "高一致性参数组合"
  #     parameters: {...}

# ================================================================
# 📈 第六步：分析功能开关
# ================================================================
analysis_features:
  # 🕒 时间趋势分析
  time_evolution:
    enable: true                 # 是否分析主题随时间变化
    time_periods: 10             # 时间段数量
  
  # 📺 媒体来源对比
  source_comparison:
    enable: true                 # 是否对比不同媒体的主题分布
  
  # 🖼️ 高质量图表
  academic_charts:
    enable: true                 # 是否生成学术发表级图表
    formats: ["png", "pdf", "svg"]  # 图表格式
    dpi: 300                     # 图表分辨率

# ================================================================
# 🤖 第七步：AI智能标签（可选功能）
# ================================================================
ai_labeling:
  enable: false                  # 是否启用AI为主题生成中文标签
  
  # 🔑 API配置（与您的其他项目保持一致）
  api_config:
    # API密钥列表：支持多个密钥轮换
    API_KEYS:
      - "sk-oS1mH"
    
    # API基础URL：代理服务地址
    BASE_URL: "https://openai.sharkmagic.com.cn/v1"
    
    # 使用的模型
    MODEL: "[官自-0.7]gemini-2-5-flash"
    
  # 📝 标签生成设置
  label_settings:
    length: "8-12个汉字"          # 标签长度要求
    style: "学术化简洁"           # 标签风格
    request_delay: 0.5            # 请求间隔（秒）
    max_retries: 3                # 最大重试次数
    timeout: 60                   # 请求超时时间（秒）
  
  # 🎯 提示词模板选择（选择一个使用，或自定义）
  prompt_style: "academic"           # 选择提示词风格：academic/concise/creative/custom
  
  # 📝 预设提示词模板
  prompt_templates:
    # 学术风格（详细分析）
    academic: |
      您是一位专业的学术研究助手，擅长为主题建模结果生成准确、简洁的中文标签。

      任务：基于以下关键词为主题生成一个中文标签
      要求：{length}，{style}风格，准确概括主题核心内容
      
      关键词：{keywords}
      
      分析步骤：
      1. 理解关键词的语义关联
      2. 识别主题的核心概念
      3. 生成简洁准确的标签
      
      请严格按照JSON格式输出：
      {{"topic_label": "您生成的主题标签"}}
      
      注意：
      - 标签必须是中文
      - 长度控制在{length}
      - 风格保持{style}
      - 避免使用过于宽泛的词汇
    
    # 简洁风格（快速生成）
    concise: |
      基于关键词生成中文主题标签，要求{length}，{style}风格。
      
      关键词：{keywords}
      
      输出JSON格式：{{"topic_label": "主题标签"}}
    
    # 创意风格（更有表现力）
    creative: |
      您是一位资深的内容策划师，请为以下主题关键词创造一个生动、准确的中文标签。
      
      关键词：{keywords}
      
      要求：
      - {length}
      - {style}风格
      - 既要准确概括主题，又要有一定的表现力
      - 适合学术研究和媒体传播
      
      请输出：{{"topic_label": "您的创意标签"}}
    
    # 自定义模板（您可以完全自定义）
    custom: |
      # 在这里写您的自定义提示词
      # 可用变量：{keywords}, {length}, {style}
      
      基于关键词：{keywords}
      生成{length}的{style}中文标签
      
      输出：{{"topic_label": "标签内容"}}

# ================================================================
# 📁 第八步：输出设置
# ================================================================
output_settings:
  # 📂 结果保存位置
  results_folder: "results"      # 结果文件夹名称
  
  # 📊 生成的文件类型
  generate_files:
    topic_summary: true          # 主题摘要表
    document_mapping: true       # 文档-主题映射表
    keyword_table: true          # 关键词详细表
    analysis_report: true        # 中文分析报告
    interactive_charts: true     # 交互式图表
  
  # 🏷️ 文件命名（中文名称）
  file_names:
    topic_summary: "主题摘要表"
    document_mapping: "文档主题分布表"  
    keyword_table: "主题关键词表"
    analysis_report: "主题分析报告"

# ================================================================
# 🔧 第九步：系统设置（通常无需修改）
# ================================================================
system_settings:
  # 💻 性能设置
  use_gpu: false                 # 是否使用GPU加速（需要CUDA）
  max_memory: "auto"             # 最大内存使用："auto"或具体数值如"8GB"
  random_seed: 42                # 随机种子（确保结果可重复）
  
  # 📝 日志设置
  logging:
    level: "INFO"                # 日志详细程度：DEBUG/INFO/WARNING/ERROR
    save_log: true               # 是否保存日志文件

# ================================================================
# 📚 使用说明和常见问题
# ================================================================
# 
# 🚀 快速开始流程：
# 1. 准备数据：将Excel文件放入data文件夹
# 2. 设置路径：修改上面的data_files部分
# 3. 选择模式：新手选'tune'，有经验选'analyze'
# 4. 运行分析：双击run_analysis.bat或运行python main.py --run
# 5. 查看结果：在results文件夹中查看生成的文件
#
# 🔄 两阶段工作流：
# 第一次：mode设为'tune' → 运行 → 获得候选参数
# 第二次：mode设为'analyze' → 选择候选参数 → 运行 → 获得详细分析
#
# ❓ 常见问题：
# Q: 主题数量太多/太少怎么办？
# A: 调整min_documents_per_topic参数，数值越大主题越少
#
# Q: 主题质量不好怎么办？  
# A: 先用tune模式让机器找最佳参数，或调整similarity_threshold
#
# Q: 分析速度太慢怎么办？
# A: 减少trials数量，或将use_gpu设为true（需要GPU）
#
# Q: 想要中文主题标签怎么办？
# A: 启用ai_labeling功能，需要OpenAI API密钥
#
# Q: 如何自定义AI标签的提示词？
# A: 修改ai_labeling.prompt_style选择预设风格，或编辑prompt_templates.custom自定义
#
# Q: AI生成的标签质量不好怎么办？
# A: 1) 尝试不同的prompt_style (academic/concise/creative)
#    2) 调整label_settings中的length和style参数
#    3) 在prompt_templates.custom中完全自定义提示词
#
# 💡 更多帮助：
# - 运行python main.py --check 检查环境
# - 双击run_web.bat 使用图形界面
# - 查看results文件夹中的详细报告
#
# ================================================================